# annotate("text", x = 1.5, y = 1020,
#          label = "Lalande 2020 Peak POC",
#          color = 'darkgreen',
#          size = 3, vjust = 0)+
# geom_point()+
# geom_text(aes(label = Sample_Number), position = position_jitter(width = 0.2), size = 3, vjust = -0.5)+
# scale_color_manual(values=wes_palette('Zissou1')[c(1, 3, 5)])+
scale_color_manual(values = c("#d63a41","#FCCE50", "#44C7FF"))+
theme_classic()
front_boxplot
frontIceAnova <- aov(fluxChl~inFront*iceObs,
data = filter(traps_front_position, !is.na(inFront)))
summary(frontIceAnova)
TukeyHSD(frontIceAnova)
noFront <- traps_front_position %>%
filter(inFront == F)
noFront_ice <- filter(noFront, iceObs == 'ice')
noFront_ow <- filter(noFront, iceObs =='ow')
t.test(noFront_ice$fluxChl, noFront_ow$fluxChl, alternative='greater')
t.test(noFront_ice$fluxC, noFront_ow$fluxC, alternative='greater')
t.test(noFront_ice$fluxN, noFront_ow$fluxN, alternative='greater')
noFront_ow_report <- noFront_ow%>%
summarize(meanChl = mean(fluxChl, na.rm = T),
sdChl = sd(fluxChl, na.rm = T),
meanC = mean(fluxC, na.rm = T),
sdC = sd(fluxC, na.rm = T),
meanN = mean(fluxN, na.rm = T),
sdN = sd(fluxN, na.rm = T))
#### Take Means For Reporting ####
means <- allFlux %>%
mutate(fluxN = ifelse(fluxN <0, NA, fluxN))%>% # filters bad point
left_join(., bridge_cam_ice)%>%
mutate(iceObs = ifelse(Deployment == 'T005', 'miz', iceObs))%>%
group_by(iceObs)%>%
summarize(meanC = mean(fluxC, na.rm = T),
sdC = sd(fluxC, na.rm = T),
meanN = mean(fluxN, na.rm = T),
sdN = sd(fluxN, na.rm = T),
meanChl = mean(fluxChl, na.rm = T),
sdChl = sd(fluxChl, na.rm = T))
noFront_ow_report <- noFront_ow%>%
summarize(meanChl = mean(fluxChl, na.rm = T),
sdChl = sd(fluxChl, na.rm = T),
meanC = mean(fluxC, na.rm = T),
sdC = sd(fluxC, na.rm = T),
meanN = mean(fluxN, na.rm = T),
sdN = sd(fluxN, na.rm = T))
View(noFront_ow_report)
frontIceAnova <- aov(fluxChl~inFront*iceObs,
data = filter(traps_front_position, !is.na(inFront)))
summary(frontIceAnova)
#### Create flux_grad and flux_grad_wcOnly dataframes ####
flux_grad <- allFlux %>%
# filter(depthCat != 'ice')%>%
left_join(., filter(ctd, CASTNO == 1), join_by(station, closest(depth>=depth))) %>% # closest CTD depth less than trap depth, cast 1 only
mutate(depth = depth.x)%>%
left_join(., bridge_cam_ice)%>%
left_join(., bridge_cam_ice_recover)%>%
mutate(depthCat = ifelse(depth >= 16, 'deep',
ifelse(depth <= 5, 'iceTethered', 'shallow')),
iceShift = ifelse(iceObs == iceObsRecover, F, T),
inFront = ifelse(LateralDensityGrad >= 0.02, T, F))%>%
mutate(inFront = factor(inFront),
iceObs = factor(iceObs))
library(tidyverse)
library(wesanderson)
#### Ice Data ####
bridge_cam_ice <- read_csv('../../data_general/data_station_meta/observed_ice_edge_bridgecam_updated072425.csv')%>%
mutate(iceObs = ice_obs)%>%
select(station, iceObs)
bridge_cam_ice_recover <- bridge_cam_ice %>%
mutate(stationRecover = station,
iceObsRecover = iceObs,
.keep = 'unused')
#### CTD Physics ####
## All sensor measurements at all depths (downcast)
ctd <- read_csv('../../data_general/processed_data/final_qc_CTD_data_interpolatedGrad.csv')%>%
mutate(dist_along_transect_km = dist_km,
station = STNNBR,
cast = 1.0,
section = str_extract(SECT_ID, '.+(?=-)'),
sectionStation = str_extract(SECT_ID, '(?<=-)\\d+'))%>%
group_by(STNNBR)%>%
arrange(CTDPRS_DBAR)%>%
mutate(depth = CTDPRS_DBAR)
# front_diagnose_stats <- ctd %>%
#   drop_na(LateralDensityGrad)%>%
#   group_by(station) %>%
#   mutate(surface_density_grad = LateralDensityGrad[which.min(CTDPRS_DBAR)],
#          density_grad_at_15 = LateralDensityGrad[which(CTDPRS_DBAR == 15)],
#          mean_density_grad = mean_density_gradient[which.max(CTDPRS_DBAR)])%>%
#   select(station, cast, section,
#          LATITUDE, LONGITUDE, dist_along_transect_km,
#          surface_density_grad, density_grad_at_15, mean_density_grad)%>%
#   unique()%>%
#   arrange(station)
#
# write.csv(front_diagnose_stats, '../results/front_metrics_by_station.csv')
#### Bottle File ####
## All bottle measurements, plus upcast sensor measurements at time bottle was tripped
bottle <- read_csv('../../data_general/processed_data/final_qc_bottle_file.csv')%>%
mutate(section = str_extract(SECT_ID, '^T...|(BS|ZZ)|^.{1,3}.(?=-|$)'),
transect = str_extract(section, '^[:alpha:]+'),
sectionStation = as.numeric(str_extract(SECT_ID, '\\d\\.\\d$|\\d+$|\\d+(?= /)')))%>%
filter(SAMPNO != -999)
water_col_chl <- bottle %>%
mutate(station = STNNBR,
cast = CASTNO,
pressure_bottle_dbar = CTDPRS_DBAR_BOTTLE,
chla_mg_m3 = ifelse(CHLORA_FLAG_W==6, `CHLORA_UG/L`, NA), # NOTE: mg/m3 == ug/l
chla_fluor_mg_m3 = ifelse(CTDFLUOR_FLAG_W==2, `CTDFLUOR_MG/M^3`, NA))%>%
select(station, cast, pressure_bottle_dbar, chla_mg_m3, chla_fluor_mg_m3)%>%
group_by(station, cast)%>%
group_split()
#### Depth Integrated Biomass Data ####
diBiomass_above_trap <- read_csv('../../data_general/processed_data/depth_integrated_biomass_above_traps.csv')%>%
mutate(trap_depth = ifelse(trap %in% c('T012S', 'T014S') == T, 0, trap_depth))%>%
mutate(Sample_Number = trap,
Deployment = deployment,
Section_Name = section,
Trap_Depth = trap_depth,
diChl_aboveTrap_mg_m2 = dichlMean_mg_m2,
diPOC_aboveTrap_mg_m2 = dipoc_mg_m2,
diPON_aboveTrap_mg_m2 = dipon_mg_m2,
.keep = 'unused')
diBiomass_by_station <- read_csv('../../data_general/processed_data/depth_integrated_biomass_full_wc_all_stations.csv')
#### Trap and Flux Data ####
trap_chlFlux <- read_csv('../../data_general/processed_data/trap_metadata_with_flux.csv')%>%
mutate(station = Deploy_Station,
stationRecover = Recover_Station,
fluxChl = flux_mg_m2_day,
fluxPhaeo = phaeo_flux_mg_m2_day,
fluxPigmentsTotal = flux_mg_m2_day + phaeo_flux_mg_m2_day)%>%
filter(Deployment != 'T001')%>% # test deployment useless
select(Sample_Number, Deployment, station, stationRecover,
Section_Name, Trap_Depth, fluxChl, fluxPhaeo,
fluxPigmentsTotal)
trap_CNFlux <- read_csv('../../data_general/processed_data/trap_metadata_CNflux.csv')%>%
mutate(station = Deploy_Station,
flag_peaks = ifelse(Sample_Number=='T028D'|Sample_Number=='T009D', T, F))%>%
filter(Deployment != 'T001')%>% # test deployment useless
select(Sample_Number, Deployment, Section_Name, Trap_Depth, timeOut_days,
fluxC, fluxN, CNratio, flag_peaks)
#### Trap Speed Data ####
trap_speed_metrics <- read_csv('../../data_general/data_preprocessed/speed_metrics_all_deployments.csv')%>%
select(-`...1`)%>%
mutate(Deployment = deployment, .keep='unused')
#### Combine All Trap Data and write to CSV ####
allFlux <- full_join(trap_chlFlux, trap_CNFlux)%>%
mutate(depth = Trap_Depth,
depthCat = ifelse(Trap_Depth <= 5, 'ice',
ifelse(Trap_Depth <= 20, 'shallow', 'deep')),
transect = str_extract(Section_Name, '^[:alpha:]{2,3}'),
fluxC = ifelse(flag_peaks == T, NA, fluxC),
fluxN = ifelse(flag_peaks == T, NA, fluxN),
CNratio = ifelse(flag_peaks ==T, NA, CNratio))%>%
filter(Deployment != 'T001')%>%
left_join(., bridge_cam_ice)%>%
left_join(., diBiomass_above_trap)%>%
mutate(normflux_chl = fluxChl / diChl_aboveTrap_mg_m2,
normflux_poc = fluxC / diPOC_aboveTrap_mg_m2,
normflux_pon = fluxN / diPON_aboveTrap_mg_m2)%>%
left_join(., trap_speed_metrics)%>%
mutate(average_drift_speed_km_day = totalDist_km / timeOut_days,
average_drift_speed_km_hr = average_drift_speed_km_day / 24,
average_drift_speed_cm_s = average_drift_speed_km_day * 10^5 / (24*3600))
allFlux_forExport <- allFlux %>%
select(Sample_Number, Deployment, station, stationRecover, Section_Name, transect,
Trap_Depth, depthCat, iceObs, timeOut_days, totalDist_km,
average_drift_speed_km_hr, average_drift_speed_cm_s,
fluxChl, fluxPhaeo, fluxPigmentsTotal, fluxC, fluxN, CNratio,
diChl_aboveTrap_mg_m2, diPOC_aboveTrap_mg_m2, diPON_aboveTrap_mg_m2,
normflux_chl, normflux_poc, normflux_pon)
write_csv(allFlux_forExport, '../../data_general/processed_data/allTrapFluxData.csv')
#### Report Speeds ####
simple_speed <- select(allFlux, Deployment, totalDist_km, average_drift_speed_km_hr, average_drift_speed_cm_s)%>%
filter(Deployment != 'T001')%>%
drop_na()
# speedMean = mean(simple_speed$average_drift_speed_km_hr)
# speedSd = sd(simple_speed$average_drift_speed_km_hr)
speedMean = mean(simple_speed$average_drift_speed_cm_s)
speedSd = sd(simple_speed$average_drift_speed_cm_s)
distanceMean = mean(simple_speed$totalDist_km)
distanceSd = sd(simple_speed$totalDist_km)
print(speedMean)
print(speedSd)
print(distanceMean)
print(distanceSd)
#### Is Flux correlated with trap speed? ####
summary(lm(fluxC ~ speedMean_cm_s, allFlux))
## yes actually quite strong
ggplot(allFlux,
aes(x = speedMean_cm_s,
y = fluxC))+
geom_point()
summary(lm(fluxC ~ totalDist_km / timeOut_days, allFlux))
ggplot(allFlux,
aes(x = totalDist_km / timeOut_days,
y = fluxC))+
geom_point()
#### Quick Comparison of Chl and CN fluxes ####
chl_C <- ggplot(allFlux, aes(x = fluxChl, y = fluxC))+
geom_point()+
geom_abline(intercept = 0, slope = 500, color = 'orange')
chl_C
c_pigments <- mutate(allFlux, t005 = ifelse(Deployment == 'T005', T, F))%>%
ggplot(., aes(x = fluxPigmentsTotal, y = fluxC, color = t005))+
geom_point()+
geom_abline(intercept = 0, slope = 200, color = 'orange')
c_pigments
chl_N <- ggplot(allFlux, aes(x = fluxN, y = fluxChl))+
geom_point()+
geom_abline(intercept = 0, slope = 1/50, color = 'orange')
chl_N
C_N <- mutate(allFlux, t005 = ifelse(Deployment == 'T005', T, F))%>%
ggplot(., aes(x = fluxN, y = fluxC, color = t005))+
geom_point()+
geom_abline(intercept = 0, slope = 106/16, color = 'orange')+
labs(x = bquote('PON Flux [mg/'*m^2*'/day]'),
y = bquote('POC Flux [mg/'*m^2*'/day]'))+
theme_classic()
C_N
#### Flux Bar Chart by Deployment ####
barChart <- allFlux %>%
mutate(depthCat = ifelse(Trap_Depth <= 5, 'Ice',
ifelse(Trap_Depth <= 18, 'Shallow', 'Deep')))%>%
# ggplot(., aes(x = Deployment, y = fluxC, color = depthCat))+
ggplot(., aes(x = Deployment, y = fluxC, fill = depthCat)) +
geom_bar(stat = "identity", width = 0.5) +
# labs(title = "Stacked Bar Chart Example",
#      x = "Category",
#      y = "Value") +
theme_minimal()+
facet_wrap(~iceObs, scales = "free_x")
barChart
#### Create flux_grad and flux_grad_wcOnly dataframes ####
flux_grad <- allFlux %>%
# filter(depthCat != 'ice')%>%
left_join(., filter(ctd, CASTNO == 1), join_by(station, closest(depth>=depth))) %>% # closest CTD depth less than trap depth, cast 1 only
mutate(depth = depth.x)%>%
left_join(., bridge_cam_ice)%>%
left_join(., bridge_cam_ice_recover)%>%
mutate(depthCat = ifelse(depth >= 16, 'deep',
ifelse(depth <= 5, 'iceTethered', 'shallow')),
iceShift = ifelse(iceObs == iceObsRecover, F, T),
inFront = ifelse(LateralDensityGrad >= 0.02, T, F))%>%
mutate(inFront = factor(inFront),
iceObs = factor(iceObs))
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
#### Test Boxplots - not used ####
## CN Ratio With ice_data
ice_data <- filter(flux_grad, is.na(iceObs) == F)%>%
mutate(
depthCat = ifelse(depthCat == 'deep', '25-35 m',
ifelse(depthCat == 'shallow', '10-15 m', '0-5 m (Ice Tethered)')),
iceBoth = paste(iceObs, iceObsRecover, sep = '_'),
iceObs = ifelse(depthCat == 'iceTethered', 'iceTethered', iceObs),
iceObs = factor(iceObs, levels=c('iceTethered', 'ice', 'miz', 'ow')))
cn_boxplot <- filter(ice_data, CNratio <= 10^15 & CNratio >= 0)%>%
ggplot(., aes(x = iceObs, y = CNratio, color = depthCat))+
geom_boxplot()+
scale_x_discrete(labels=c('ice' = 'Consolidated Ice',
'miz' = 'Marginal Ice Zone\n(Front)',
'ow' = 'Open Water'))+
scale_color_manual(values=wes_palette('Zissou1')[c(1, 3, 5)])+
theme_classic()
cn_boxplot
## Depth Integrated Chl above with depth categories
ggplot(ice_data,
aes(x = iceObs,
y = diChl_aboveTrap_mg_m2,
color = depthCat))+
geom_boxplot()+
scale_x_discrete(labels=c('ice' = 'Consolidated Ice',
'miz' = 'Marginal Ice Zone\n(Front)',
'ow' = 'Open Water'))+
# scale_color_manual(values=wes_palette('Zissou1')[c(1, 3, 5)],
#                    name = 'Deployment Depth')+
scale_color_manual(values = c("#d63a41","#FCCE50", "#44C7FF"),
name = 'Deployment Depth')+
theme_classic()+
xlab('Observed Ice Coverage')+
ylab(bquote('Depth Integrated Chl '*italic(a)*' Above Trap ('*mg~m^-2*')'))
diChl_anova <- aov(diChl_aboveTrap_mg_m2 ~ iceObs*depthCat, data = ice_data)
summary(diChl_anova)
TukeyHSD(diChl_anova)
n_boxplot <- ggplot(ice_data, aes(x = iceObs, y = fluxN, color = depthCat))+
# geom_point()+
geom_boxplot()+
scale_x_discrete(labels=c('ice' = 'Consolidated Ice',
'miz' = 'Marginal Ice Zone\n(Front)',
'ow' = 'Open Water'))+
labs(x = 'Deployment Station Ice Coverage',
y = bquote('PON Flux (mg/'*m^2*'/day)'),
color = 'Trap Depth')+
scale_color_manual(values = c("#d63a41","#FCCE50", "#44C7FF"))+
# scale_color_manual(values=wes_palette('Zissou1')[c(1, 3, 5)])+
theme_classic()
n_boxplot
c_boxplot <- ggplot(ice_data, aes(x = iceObs, y = fluxC, color = depthCat))+
# geom_point()+
geom_boxplot()+
scale_x_discrete(labels=c('ice' = 'Consolidated Ice',
'miz' = 'Marginal Ice Zone\n(Front)',
'ow' = 'Open Water'))+
labs(x = 'Deployment Station Ice Coverage',
y = bquote('POC Flux (mg/'*m^2*'/day)'),
color = 'Trap Depth')+
scale_color_manual(values = c("#d63a41","#FCCE50", "#44C7FF"))+
# scale_color_manual(values=wes_palette('Zissou1')[c(1, 3, 5)])+
theme_classic()
c_boxplot
chl_boxplot <- ggplot(ice_data,
aes(
x = iceObs,
# x = depthCat,
y = fluxChl,
# y = fluxC,
# y = fluxN,
color = depthCat
# color = iceObs
))+
# geom_point()+
geom_boxplot()+
scale_x_discrete(labels=c('ice' = 'Consolidated Ice',
'miz' = 'Marginal Ice Zone\n(Front)',
'ow' = 'Open Water'))+
labs(x = 'Deployment Station Ice Coverage',
y = bquote('Chl '*italic(a)*' Flux ('*mg~m^-2*~day^-1*')'),
color = 'Trap Depth')+
scale_color_manual(values = c("#d63a41","#FCCE50", "#44C7FF"))+
# scale_color_manual(values=wes_palette('Zissou1')[c(1, 3, 5)])+
theme_classic()
chl_boxplot
## Anova testing the above
iceDepthChl_anova <- aov(fluxChl ~ iceObs*depthCat, data = ice_data)
summary(iceDepthChl_anova)
TukeyHSD(iceDepthChl_anova)
iceDepthPOC_anova <- aov(fluxC ~ iceObs*depthCat, data = ice_data)
summary(iceDepthPOC_anova)
TukeyHSD(iceDepthPOC_anova)
iceDepthPON_anova <- aov(fluxN ~ iceObs*depthCat, data = ice_data)
summary(iceDepthPON_anova)
TukeyHSD(iceDepthPON_anova)
### Attempt at frontal classification
traps_front_position <- flux_grad_wcOnly %>%
mutate(inFront = factor(inFront),
iceObs = factor(iceObs))%>%
select(Sample_Number, Deployment, station, stationRecover, Section_Name,
Trap_Depth, depthCat, transect, LateralDensityGrad, inFront,
iceObs, iceObsRecover, iceShift,
diChl_aboveTrap_mg_m2, diPOC_aboveTrap_mg_m2, diPON_aboveTrap_mg_m2,
normflux_poc, normflux_pon, normflux_chl,
fluxC, fluxN, fluxChl, fluxPhaeo, fluxPigmentsTotal,
CNratio)%>%
filter(Deployment != 'T001')
front_boxplot <- ggplot(filter(traps_front_position, !is.na(inFront)),
aes(x = inFront,
# y = fluxChl,
y = fluxC,
# y=fluxN,
# shape = depthCat,
color = iceObs))+
geom_boxplot()+
# geom_point()+
# geom_hline(yintercept = 1000, linetype = "dashed", color = "darkgreen") +
# annotate("text", x = 1.5, y = 1020,
#          label = "Lalande 2020 Peak POC",
#          color = 'darkgreen',
#          size = 3, vjust = 0)+
# geom_point()+
# geom_text(aes(label = Sample_Number), position = position_jitter(width = 0.2), size = 3, vjust = -0.5)+
# scale_color_manual(values=wes_palette('Zissou1')[c(1, 3, 5)])+
scale_color_manual(values = c("#d63a41","#FCCE50", "#44C7FF"))+
theme_classic()
front_boxplot
frontIceAnova <- aov(fluxChl~inFront*iceObs,
data = filter(traps_front_position, !is.na(inFront)))
summary(frontIceAnova)
TukeyHSD(frontIceAnova)
noFront <- traps_front_position %>%
filter(inFront == F)
noFront_ice <- filter(noFront, iceObs == 'ice')
noFront_ow <- filter(noFront, iceObs =='ow')
t.test(noFront_ice$fluxChl, noFront_ow$fluxChl, alternative='greater')
source("~/HDProjects/ChukchiCruise23/code/figures_finalized_code/fig4_5_7_flux_relationships/src/figure7_frontBoxplots.R", echo=TRUE)
# pocFront <- traps_front_position %>%
pocFront <- flux_grad_wcOnly
# pocFront <- traps_front_position %>%
pocFront <- flux_grad_wcOnly%>%
filter(!is.na(inFront))%>%
mutate(frontText = ifelse(inFront == T, front_true, front_false))%>%
ggplot(.,
aes(x = frontText,
y = fluxC,
color = iceObs))+
geom_boxplot()+
scale_color_manual(values = c("#44C7FF","#FCCE50","#d63a41"))+
# scale_color_manual(values=wes_palette('Zissou1')[c(1, 3, 5)])+
labs(x = NULL, y = bquote('POC Flux ('*mg~m^-2~day^-1*')'))+
theme_classic()+
theme(text = element_text(size = 16), legend.position = 'none')
pocFront
# pocFront <- traps_front_position %>%
pocFront <- flux_grad_wcOnly%>%
filter(!is.na(inFront))%>%
mutate(frontText = ifelse(inFront == T, front_true, front_false))%>%
ggplot(.,
aes(x = frontText,
y = fluxC,
color = iceObs))+
geom_boxplot()+
scale_color_manual(values = c("#44C7FF","#FCCE50","#d63a41"))+
# scale_color_manual(values=wes_palette('Zissou1')[c(1, 3, 5)])+
labs(x = NULL, y = bquote('POC Flux ('*mg~m^-2~day^-1*')'))+
theme_classic()#+
pocFront
# pocFront <- traps_front_position %>%
pocFront <- flux_grad_wcOnly%>%
filter(!is.na(inFront))%>%
mutate(frontText = ifelse(inFront == T, front_true, front_false))%>%
ggplot(.,
aes(x = frontText,
y = fluxC,
color = iceObs))+
geom_boxplot()+
scale_color_manual(values = c("#d63a41","#FCCE50","#44C7FF"))+
# scale_color_manual(values=wes_palette('Zissou1')[c(1, 3, 5)])+
labs(x = NULL, y = bquote('POC Flux ('*mg~m^-2~day^-1*')'))+
theme_classic()#+
theme(text = element_text(size = 16), legend.position = 'none')
pocFront
pocFront_anova <- aov(fluxC~frontText*iceObs,
data = filter(flux_grad_wcOnly, !is.na(inFront)))
pocFront_anova <- aov(fluxC~inFront*iceObs,
data = filter(flux_grad_wcOnly, !is.na(inFront)))
summary(pocFront_anova)
TukeyHSD(pocFront_anova)
pocFront_anova <- aov(fluxC~inFront*iceObs,
data = filter(flux_grad_wcOnly, !is.na(inFront)))
summary(pocFront_anova)
data_prepped <- flux_grad_wcOnly%>%
filter(!is.na(inFront))%>%
mutate(frontText = ifelse(inFront == T, front_true, front_false),
statsGroup = paste(iceObs, frontText))
pocFront <- ggplot(data_prepped,
aes(x = frontText,
y = fluxC,
color = iceObs))+
geom_boxplot()+
scale_color_manual(values = c("#d63a41","#FCCE50","#44C7FF"))+
# scale_color_manual(values=wes_palette('Zissou1')[c(1, 3, 5)])+
labs(x = NULL, y = bquote('POC Flux ('*mg~m^-2~day^-1*')'))+
theme_classic()#+
theme(text = element_text(size = 16), legend.position = 'none')
pocFront <- ggplot(data_prepped,
aes(x = frontText,
y = fluxC,
color = iceObs))+
geom_boxplot()+
scale_color_manual(values = c("#d63a41","#FCCE50","#44C7FF"))+
# scale_color_manual(values=wes_palette('Zissou1')[c(1, 3, 5)])+
labs(x = NULL, y = bquote('POC Flux ('*mg~m^-2~day^-1*')'))+
theme_classic()+
theme(text = element_text(size = 16), legend.position = 'none')
pocFront
ponFront <- ggplot(data_prepped),
ponFront
ponFront <- ggplot(data_prepped,
aes(x = frontText,
y=fluxN,
color = iceObs))+
geom_boxplot()+
labs(x = NULL, y = bquote('PON Flux ('*mg~m^-2~day^-1*')'))+
scale_color_manual(values = c("#d63a41","#FCCE50","#44C7FF"))+
# scale_color_manual(values=wes_palette('Zissou1')[c(1, 3, 5)])+
theme_classic()+
theme(text = element_text(size = 16), legend.position = 'none')
ponFront
chlFront <- ggplot(data_prepped,
aes(x = frontText,
y = fluxChl,
color = iceObs))+
geom_boxplot()+
labs(x = NULL, y = bquote('Chlorophyll '*italic(a)*' Flux ('*mg~m^-2~day^-1*')'))+
scale_color_manual(values = c("#d63a41","#FCCE50","#44C7FF"))+
# scale_color_manual(values=wes_palette('Zissou1')[c(1, 3, 5)])+
theme_classic()+
theme(text = element_text(size = 16), legend.position = 'none')
chlFront
ggsave('../results/plots/fluxChl_byFront.png', chlFront, width = 4, height = 5, dpi = 300)
ggsave('../results/plots/fluxPOC_byFront.png', pocFront, width = 4, height = 5, dpi = 300)
ggsave('../results/plots/fluxPON_byFront.png', ponFront, width = 4, height = 5, dpi = 300)
pocFront_anova <- aov(fluxC~statsGroup,
data = data_prepped)
summary(pocFront_anova)
TukeyHSD(pocFront_anova)
chlFront_anova <- aov(fluxChl ~ statsGroup,
data = data_prepped)
source("~/HDProjects/ChukchiCruise23/code/figures_finalized_code/fig4_5_7_flux_relationships/src/figure7_frontBoxplots.R", echo=TRUE)
source("~/HDProjects/ChukchiCruise23/code/figures_finalized_code/fig4_5_7_flux_relationships/src/prep_data_for_figs_4_5_7.R", echo=TRUE)
source("~/HDProjects/ChukchiCruise23/code/figures_finalized_code/fig4_5_7_flux_relationships/src/prep_data_for_figs_4_5_7.R", echo=TRUE)
source("~/HDProjects/ChukchiCruise23/code/figures_finalized_code/fig4_5_7_flux_relationships/src/figure4_boxplots.R", echo=TRUE)
#### Ice Data ####
bridge_cam_ice <- read_csv('../data_general/data_station_meta/observed_ice_edge_bridgecam_updated072425.csv')%>%
mutate(iceObs = ice_obs)%>%
select(station, iceObs)
source("~/HDProjects/ChukchiCruise23/code/figures_finalized_code/data_general/src/prep_data_for_figs_3_4_5_6_7.R", echo=TRUE)
setwd("~/HDProjects/ChukchiCruise23/code/figures_finalized_code/data_general/src")
source("~/HDProjects/ChukchiCruise23/code/figures_finalized_code/data_general/src/prep_data_for_figs_3_4_5_6_7.R", echo=TRUE)
